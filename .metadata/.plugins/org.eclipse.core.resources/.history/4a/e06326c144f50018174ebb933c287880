package com.jhc.二叉搜索树;

public class BinarySearchTree<T> {
	private class Node<T>{
		public T data;
		public Node<T> left;
		public Node<T> right;
		public Node(T data1){
			this(data1,null,null);
		}
		public Node(T data,Node<T> left,Node<T> right){
			this.data = data;
			this.left = left;
			this.right = right;
		}
	}
	private Node<T> root;
	/**
	 * 没有参数默认初始化为null
	 */
	public BinarySearchTree(){
		this.root = null;
	}
	public void makeEmpty(){
		this.root = null;
	}
	public boolean isEmpty(){
		return root == null;
	}
	
	public boolean contains(T value){
		return contains(root,value);
	}
	public boolean contains(Node<T> root,T value){
		if(root == null){
			return false;
		}
		int result = value.compareTo(root.data);
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
